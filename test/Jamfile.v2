# Copyright Paul A. Bristow 2018.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt.

# \math_toolkit\libs\quan\test\jamfile.v2
# Runs all tests
# and build math examples.

# bring in the rules for testing
import testing ;
import modules ;
import path ; # PATH
import pch ;

# Build Time Configuration
# When you want to control whether a build target gets built or not, based on what features the compiler supports.
# https://www.boost.org/doc/libs/1_68_0/libs/config/doc/html/boost_config/build_config.html
import ../../config/checks/config : requires ;

project "quan_test"
  : requirements
  <toolset>intel-win:<cxxflags>-nologo
  <toolset>intel-win:<linkflags>-nologo
  #<toolset>intel-linux:<pch>off
  <toolset>intel-darwin:<pch>off
  <toolset>msvc:<warnings>all
  <toolset>msvc:<asynch-exceptions>on
  <toolset>msvc:<cxxflags>/wd4996
  <toolset>msvc:<cxxflags>/wd4511 # copy constructor could not be generated
  <toolset>msvc:<cxxflags>/wd4512
  <toolset>msvc:<cxxflags>/wd4610
  <toolset>msvc:<cxxflags>/wd4510
  <toolset>msvc:<cxxflags>/wd4127
  <toolset>msvc:<cxxflags>/wd4459
  <toolset>msvc:<cxxflags>/wd4701 # needed for lexical cast - temporary.
  <toolset>msvc:<cxxflags>/wd4189 # local variable is initialized but not referenced
  <toolset>msvc-7.1:<pch>off
  <toolset>clang-6.0.0:<pch>off  #
  <toolset>gcc,<target-os>windows:<pch>off
  <toolset>borland:<runtime-link>static
  # <toolset>msvc:<cxxflags>/wd4506 has no effect?
  # suppress xstring(237) : warning C4506: no definition for inline function.
  <include>../../.. #
  # <source>../../regex/build//boost_regex
  #<link>shared:<define>BOOST_REGEX_DYN_LINK=1
  <library>/boost/test//boost_unit_test_framework

  # For simplicities sake, make everything a static lib:
  <link>static
  # <define>BOOST_ALL_NO_LIB=1
  <include>. # quan/test
 ;

test-suite "quan_tests" :
   [ run test_rounding.cpp ../../test/build//boost_unit_test_framework ../../math/build//boost_math_tr1 ../../math/build//boost_math_c99 ]
   [ run test_once_unc.cpp ../../test/build//boost_unit_test_framework ../../math/build//boost_math_tr1 ../../math/build//boost_math_c99 ]
   [ run unc_test.cpp ../../test/build//boost_unit_test_framework ../../math/build//boost_math_tr1 ../../math/build//boost_math_c99 ]
   [ run unc_tests.cpp ../../test/build//boost_unit_test_framework ../../math/build//boost_math_tr1 ../../math/build//boost_math_c99 ]
   [ run meas_test.cpp ../../test/build//boost_unit_test_framework ../../math/build//boost_math_tr1 ../../math/build//boost_math_c99 ]
   [ run meas_test2.cpp ../../test/build//boost_unit_test_framework ../../math/build//boost_math_tr1 ../../math/build//boost_math_c99 ]
   [ run test_autoprefix_units.cpp ../../test/build//boost_unit_test_framework ../../math/build//boost_math_tr1 ../../math/build//boost_math_c99 ]
   [ run test_meas2_basic.cpp ../../test/build//boost_unit_test_framework ../../math/build//boost_math_tr1 ../../math/build//boost_math_c99 ]

;

